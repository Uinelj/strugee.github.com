<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[strugee.net blog - 2017]]></title><description><![CDATA[strugee.net blog - 2017]]></description><link>https://strugee.net/blog/2017</link><generator>stratic-indexes-to-rss</generator><lastBuildDate>Mon, 20 Feb 2017 20:47:38 GMT</lastBuildDate><atom:link href="https://strugee.net/blog/2017/index.rss" rel="self" type="application/rss+xml"/><copyright><![CDATA[© Copyright 2012-2017 Alex Jordan. Available under the GNU Affero GPL.]]></copyright><webMaster><![CDATA[Alex Jordan <alex@strugee.net>]]></webMaster><item><title><![CDATA[From static to Stratic - part 1]]></title><description><![CDATA[<p>So a couple days ago I published <code>generator-stratic@1.0.0-beta.1</code> to npm. Since Stratic is now officially in beta, I thought I'd write up a guide to converting a regular, static site to a Stratic-powered blog.</p>
<p>Each step in this blog post (part 1 of 2[?]) will take you closer to having a fully-functional blog, but because of Stratic's decoupled design, you can work through them at your own pace. Each step will leave you with a functional environment (i.e. nothing will be "broken" such that you can't work on your website anymore).</p>
<p>You can see the steps in this post in action at <a href="https://github.com/straticjs/static-to-stratic">straticjs/static-to-stratic</a>. Each commit corresponds to a step in this post.</p>
<p>Let's get started!</p>
<h2>Initial setup</h2>
<p>The site we'll be converting is currently pretty simple. It has an <code>index.html</code> and a <code>projects.html</code>. Each of these includes <code>/css/main.css</code> and <code>/js/main.js</code>. Also, they both have a navigation section and a footer that are duplicated across each page. Each time Alyssa P. Hacker - the website's owner - makes a change to these (for example to fix the copyright year in the footer), she has to change both HTML files. The best way for her to add a new page will be to copy an existing HTML file and then change it. This is a little unideal.</p>
<p>Alyssa tracks her website on GitHub (in the example repository mentioned above). Here are links for the <a href="https://github.com/straticjs/static-to-stratic/blob/18a7a7da03a2f84f525f0b699a43005067428199/index.html"><code>index.html</code></a> and the <code>[</code>projects.html`]<a href="https://github.com/straticjs/static-to-stratic/blob/18a7a7da03a2f84f525f0b699a43005067428199/projects.html">projects.html</a> we'll be working with.</p>
<p>Here's a visual of the project layout:</p>
<pre><code>% tree .
.
├── css
│   └── main.css
├── index.html
├── js
│   └── main.js
└── projects.html

2 directories, 4 files
</code></pre>
<p>When Alyssa needs to preview her website, she manually runs <code>http-server .</code>.</p>
<p>Since Alyssa uses GitHub she publishes her website on GitHub Pages, so her website is in the <code>master</code> branch of her git repository. (Here we're assuming that the repository is called <code>aphacker.github.io</code> or something, instead of <code>static-to-stratic</code>.)</p>
<p>In addition to adding blog support, we'll improve Alyssa's website by reducing duplication while still allowing her to publish to GitHub Pages.</p>
<h2>Step 1 - adding gulp</h2>
<p>Before we do anything else, we need to add a build system. Stratic is designed to work with <a href="">gulpjs</a>, so that's the one we'll be using.</p>
<p>Adding gulp is super easy. First, we need to create a <code>package.json</code>, so we do <code>npm init</code>:</p>
<pre><code>% npm init
This utility will walk you through creating a package.json file.
It only covers the most common items, and tries to guess sensible defaults.

See `npm help json` for definitive documentation on these fields
and exactly what they do.

Use `npm install &#x3C;pkg> --save` afterwards to install a package and
save it as a dependency in the package.json file.

Press ^C at any time to quit.
name: (static-to-stratic)
version: (1.0.0)
description: Personal website of Alyssa P. Hacker
entry point: (index.js)
test command:
git repository: (https://github.com/straticjs/static-to-stratic.git)
keywords:
author: Alyssa P. Hacker &#x3C;alyssaphacker@example.net>
license: (ISC) AGPL-3.0+
About to write to /Users/alex/Development/static-to-stratic/package.json:

{
  "name": "static-to-stratic",
  "version": "1.0.0",
  "description": "Personal website of Alyssa P. Hacker",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" &#x26;&#x26; exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/straticjs/static-to-stratic.git"
  },
  "author": "Alyssa P. Hacker &#x3C;alyssaphacker@example.net>",
  "license": "AGPL-3.0+",
  "bugs": {
    "url": "https://github.com/straticjs/static-to-stratic/issues"
  },
  "homepage": "https://github.com/straticjs/static-to-stratic#readme"
}


Is this ok? (yes) yes
</code></pre>
<p>A couple things to note here: in general, the defaults are fine to accept. We've provided a description and an author, but these are optional since this isn't actually going to be published on the npm registry. They're just kind of nice to have.</p>
<p>The same goes for the license, which in this case is the <a href="https://www.gnu.org/licenses/agpl-3.0.en.html">Affero GPL 3.0 or above</a> - however, as the copyright holder you are of course free to <a href="https://choosealicense.com/">choose whatever license</a> you want. (Or no license, although I'd discourage you from doing that.)</p>
<p>Once we have a <code>package.json</code>, we can go ahead and install gulp and another module we'll need, <code>ecstatic</code>:</p>
<pre><code>% npm install --save-dev gulp ecstatic
</code></pre>
<p>If you haven't used gulp previously, you'll also need to install <code>gulp-cli</code>:</p>
<pre><code>% npm install -g gulp-cli
</code></pre>
<p>At this point, we'll need to move some files around. Now that we have a build system, we can organize our repository however we want instead of putting stuff exactly where we want it in production.</p>
<p>You can do this however you want. The organization that you'll find most projects using, though, is to put stuff in a <code>src</code> directory. Let's make that right now.</p>
<pre><code>% mkdir src
% git mv *.html src
% git mv css src/styles
% git mv js src/scripts
</code></pre>
<p>Finally, create a file named <code>gulpfile.js</code> and put the following in it:</p>
<pre><code>var gulp = require('gulp'),
    http = require('http'),
    ecstatic = require('ecstatic');

gulp.task('build:html', function() {
    gulp.src('src/*.html')
        .pipe(gulp.dest('dist'));
});

gulp.task('build:css', function() {
    gulp.src('src/styles/*')
        .pipe(gulp.dest('dist/css'));
});

gulp.task('build:js', function() {
    gulp.src('src/scripts/*')
        .pipe(gulp.dest('dist/js'));
});

gulp.task('watch', ['build'], function() {
    gulp.watch('src/*.html', ['build:html']);
    gulp.watch('src/styles/*', ['build:css']);
    gulp.watch('src/scripts/*', ['build:js']);
});

gulp.task('serve', ['watch'], function() {
        http.createServer(
                ecstatic({ root: __dirname + '/dist' })
        ).listen(8080);
});

gulp.task('build', ['build:html', 'build:css', 'build:js']);

gulp.task('default', ['serve']);
</code></pre>
<p>This gives us a pretty good starting point. This gulpfile defines a couple tasks that simply copy source files into <code>dist</code>. The <code>watch</code> task watches for changes and rebuilds when they occur, and the <code>serve</code> task starts up a server, replacing Alyssa's usage of <code>http-server</code>. This provides exactly the same workflow as before: Alyssa runs one command and then she can look at her site on <code>localhost:8080</code>. You can use different task names if you want (for example, <code>html</code> instead of <code>build:html</code>, etc.), but these are what <code>generator-stratic</code> gives you.</p>
<p>However, there's one problem: Alyssa can't deploy her site anymore. If she pushed like this, visitors would have to visit e.g. <code>https://aphacker.github.io/src/projects</code> instead of <code>https://aphacker.github.io/projects</code>! That's no good.</p>
<p>In order to rectify this, we'll create a new git branch, <code>src</code>. <code>src</code> will contain the source files, and we'll put the final, built site in <code>master</code>, which is what's served by GitHub Pages. So:</p>
<pre><code>% git checkout -b src
% git push --set-upstream origin src
</code></pre>
<p>Great. Now, we need to add something to put the built files (i.e. the contents of <code>dist</code>) in <code>master</code>. We'll use the <code>gh-pages</code> module for this. First install it and a dependency we'll need:</p>
<pre><code>% npm install --save-dev gh-pages gulp-util
</code></pre>
<p>Next, make it available in the gulpfile by adding a line at the end of <code>require()</code> statements:</p>
<pre><code>var gulp = require('gulp'),
    http = require('http'),
    ecstatic = require('ecstatic');
</code></pre>
<p>And finally, add a <code>deploy</code> task somewhere in the gulpfile:</p>
<pre><code>gulp.task('deploy', ['build'], function(done) {
    ghpages.publish(path.join(__dirname, 'dist'), { logger: gutil.log, branch: 'master' }, done);
});
</code></pre>
<p>Now whenever Alyssa wants to deploy a new version of her website, she just runs <code>gulp deploy</code> and it'll be taken care of for her. (ProTip™: change the default branch to <code>src</code> on GitHub. That way visitors and new clones see the source files, not the build files generated by a program.)</p>
<p>The very last thing we need to do is add a <code>.gitignore</code> file since we're installing Node modules and have a build directory now. We'll just use GitHub's, adding a line for <code>dist/</code> at the end:</p>
<pre><code>% curl https://raw.githubusercontent.com/github/gitignore/master/Node.gitignore > .gitignore
% echo "\ndist/\n" >> .gitignore
</code></pre>
<p>Now we've got a functionally equivalent development setup based on gulp. Success!</p>
<h2>Step 2: converting HTML to Jade</h2>
<p>The next step is to convert the HTML to <a href="https://pugjs.org">Pug</a>. Pug (formerly known as Jade) is a language that compiles to HTML. It lets you do useful things like inherit from a common layout as well as looping over JavaScript variables. If you're not familiar with Pug, you should go take a look at its syntax now.</p>
<p>The easiest way to do this conversion is to get a program to do it for you. <a href="http://html2jade.aaron-powell.com/">Here's the one I used</a> way back when; you may be able to find a better one. The generated Pug will be valid but not the prettiest - you may want to wait to clean it up since we're going to do some work to reduce the duplication soon.</p>
<p>Once you've got the converted Pug, you should rename the relevant HTML file to have a <code>.pug</code> extention, then replace the contents with the Pug. Do this for each HTML file.</p>
<p>The last step here is to make gulp build the Pug. Install <code>gulp-pug</code>:</p>
<pre><code>% npm install --save-dev gulp-pug
</code></pre>
<p>Then add <code>pug = require('gulp-pug')</code> to the end of the <code>var</code> declaration at the top of your gulpfile. Finally, change your <code>html</code> task to look like this:</p>
<pre><code>gulp.task('build:html', function() {
    gulp.src('src/*.pug')
        .pipe(pug({pretty: true}))
        .pipe(gulp.dest('dist'));
});
</code></pre>
<p>We'll also need to fix the <code>watch</code> task so it has:</p>
<pre><code>gulp.watch('src/*.pug', ['build:html']);
</code></pre>
<p>which will watch Pug files instead of HTML files.</p>
<p>That's it! Alyssa's site is now building with Pug instead of HTML.</p>
<h2>Step 3: splitting out the layout</h2>
<p>Pug's looping and flow control constructs will be very useful to us later on, but we can get some immediate productivity wins by splitting out the site layout so it's not duplicated across every Pug file.</p>
<p>There's one tricky thing about this: the navigation is mostly the same between pages, but not quite - the page the user is currently on shouldn't be a link. We'll solve this by using a <code>block</code> directivefor each link. That way, we can override just what needs to be changed, while introducing no duplication.</p>
<p>You'll have to figure out exactly what parts of your personal layout make sense to be split out. In Alyssa's case, there are three main things that are mostly or fully duplicated across pages:</p>
<ol>
<li>The navigation bar</li>
<li>The footer</li>
<li>Invisible metadata and script/style includes</li>
</ol>
<p>These are what we'll split out. First, we'll make a copy of <code>index.pug</code> and put it in <code>src/includes/layout.pug</code>. (Again, you can organize your files however you want - but in projects generated by <code>generator-stratic</code>, utility Pug files go in <code>src/includes</code>.) Next, edit out the page-specific content and replace them with <code>block</code> directives. Finally, edit each navigation bar item so it has its own <code>block</code> directive, leaving the old code as the default for the <code>block</code> directive.</p>
<p>Here's what this looks like when we do this to Alyssa's site:</p>
<pre><code>doctype html
html
  head
    meta(charset='UTF-8')
    link(href='/css/main.css', rel='stylesheet', type='text/css')
    block head
  body
    block heading
    nav
      ul
        block nav-homepage
          li
            a(href='/') Homepage
        block nav-projects
          li
            a(href='/projects') Projects

    block body

    footer
      p &#x26;copy; Copyright 2016 Alyssa P. Hacker.
    script(src='/js/main.js', type='text/javascript')
</code></pre>
<p>Note how I've replaced the <code>h1</code> element (the contents of which vary per-page) with <code>block heading</code>, I've added a <code>block head</code> directive so we can specify the title per-page, I've made a <code>block</code> for each navigation link so we can override them if we want to individually (otherwise they'll have the default of being a link), and I've added <code>block body</code> for the main content. I've also cleaned out a bunch of the cruft the automatic converter put in there.</p>
<p>Now, we can edit <code>index.pug</code> so that it inherits from <code>layout.pug</code> - we'll use the <code>extends</code> keyword for this. Then we just fill in the content we want using block. Here's what this looks like after we're finished with Alyssa's site:</p>
<pre><code>extends includes/layout.pug

block head
  title Alyssa P. Hacker's homepage

block heading
  h1 Alyssa P. Hacker's homepage

block nav-homepage
  li Homepage

block body
  p This is the homepage of Alyssa P. Hacker. You can check out the projects I've worked on #[a(href='/projects') here].
</code></pre>
<p>You'll note that I've cleaned out some cruft here, too. We have one last thing to fix: if we change the layout, nothing will get rebuilt. We can fix this by changing the <code>watch</code> task again so that the line for watching Pug files reads:</p>
<pre><code>gulp.watch(['src/*.pug', 'src/includes/*.pug'], ['build:html']);
</code></pre>
<p>Sweet! <code>index.pug</code> is way shorter than what we had before and includes <em>just</em> the content now. We can do the same thing to <code>projects.pug</code>. Then Alyssa can, for example, correct the copyright year in <code>layout.pug</code> - i.e., once - and that change will go into both <code>index.html</code> <em>and</em> <code>projects.html</code>. I've gone ahead and made the change for her.</p>
<p>To give a high-level overview, here's what Alyssa's site looks like now:</p>
<pre><code>% tree -I node_modules .
.
├── dist
│   ├── css
│   │   └── main.css
│   ├── index.html
│   ├── js
│   │   └── main.js
│   └── projects.html
├── gulpfile.js
├── package.json
└── src
    ├── includes
    │   └── layout.pug
    ├── index.pug
    ├── projects.pug
    ├── scripts
    │   └── main.js
    └── styles
        └── main.css

7 directories, 11 files
</code></pre>
<h2>Next time...</h2>
<p>This post is long enough already, so I'll stop here. We've converted Alyssa's site to have a really solid base, so next time we'll build on top of this work to add superpowered blog features, powered by Stratic.</p>
<p>Now go apply this to your own site!</p>
]]></description><link>https://strugee.net/blog/2017/02/from-static-to-stratic-part-1</link><guid isPermaLink="true">https://strugee.net/blog/2017/02/from-static-to-stratic-part-1</guid><category><![CDATA[development]]></category><category><![CDATA[stratic]]></category><pubDate>Mon, 20 Feb 2017 19:58:53 GMT</pubDate></item><item><title><![CDATA[RC week 6]]></title><description><![CDATA[<p>This is week 6 of being at the <a href="https://recurse.com">Recurse Center</a>. </p>
<p>(I feel obligated to point out that this is being published a week later than it's supposed to be because I got behind. I am, however, very confident that the following is accurate. I used GitHub history and location data to help me remember the parts that were fuzzy.)</p>
<h2>Day 19</h2>
<p>Not at RC. Total time at RC 0h0m.</p>
<p>Traveled back from <a href="https://fosdem.org/2017/">FOSDEM</a>.</p>
<h2>Day 20</h2>
<p>Arrived ~16:45, departed ~22:10, total time at RC 5h25m.</p>
<p>Somewhat unproductive day. Spent most of it just trawling the web. I was completely exhausted since I got back to my apartment from the airport at 3 in the morning. (My flight got in late, I waited at the airport for a while to see my sister, and at 12:30 I got on my train away from the AirTrain station except that it was in the wrong direction. Also, fun fact, subways and trains run <em>really</em> infrequently at 1 AM. Who knew!?)</p>
<p>I did, however, write the slides for the next day's Security Club presentation on the basics of cryptography. Started them pretty late, though, and mostly finished them at home, which was unfortunate since I was up real late again.</p>
<h2>Day 21</h2>
<p>Arrived ~13:00, departed ~22:00, total time at RC 9h0m.</p>
<p>Arrived with a little time to spare before teaching Cryptography Basics for Security Club. Didn't do much in the afternoon before leaving to walk down to the waterfront with 15 people or so, which took an hour and was really, really lovely, honestly. Especially since the Winter 1 batch is ending so soon.</p>
<h2>Day 22</h2>
<p>Arrived ~12:00, departed ~5:00, total time at RC 17h00m.</p>
<p>Spent the morning and early afternoon pairing with <a href="https://github.com/Jmeggesto">Jackie</a> on <a href="https://github.com/strugee/icalc">icalc</a>. We fixed a maddeningly weird bug where, when the user input an incorrect value, the operation type prompt would be displayed twice. You can see the fix <a href="https://github.com/strugee/icalc/commit/fb20487c5385cb0ae6192cd6540c98fbd82ff2d0#diff-2045016cb90d1e65d71c2407a2570927">here</a> - the problem was that <code>getchar()</code> was retrieving the newline used to "submit" the operation type when the function was called again (recursively). In other words, the stdin stream had <em>two</em> characters on it - the incorrect character, and the newline. The solution was to just use a different function from libc that did this correctly. The entire process was pretty educational, since it required delving into C strings, the libc manpages, etc. After fixing that, Jackie and I paired on <a href="https://github.com/Jmeggesto/bank-prettify">a JavaScript project</a> that will display Bank of America account balances on the commandline (a non-trivial problem, since Bank of America requires JavaScript).</p>
<p>In the late afternoon, switched gears a bit to review a PRISM Break PR.</p>
<p>In the evening, I gave a presentation at Thursday night presentations entitled "Mercurial for Git folks". I put zero effort into slides and instead simply opened up a bunch of tabs and terminal windows with content I wanted to point to while I was talking. Then I got up there and just... talked about why Mercurial is neat. At the beginning I asked who used Git (most hands, including mine, went up) and who hated Git (a fair number of hands, including mine, went up). So that was pretty amusing. I talked about how the design was pretty similar to Git, how Mercurial has extensions (because it's written in Python), how that plays into its "disable confusing/dangerous stuff like the staging area and rebase by default" philosophy, and how I've been learning it by just using <a href="https://hg-git.github.io/">hg-git</a> with GitHub. I thought it went pretty badly, because I didn't feel like it was very coherent. But the people I asked about it said it was actually pretty good, so that feels nice.</p>
<p>After that, we had the end-of-batch/goodbye Rose party. :'(</p>
<p>I spent a lot of time discussing politics and education with <a href="https://github.com/steph-rage">Stephanie</a>, which was lovely, and had some other long and interesting conversations that I wish I remember but don't, truthfully. Spent quite a bit of time with <a href="https://github.com/inytar">Pieter</a>, <a href="https://github.com/heatherbooker">Heather</a>, and Nicholas Wagner(?)[1] messing around on top of the desk chairs, which completely filled Hopper. Eventually ended up sitting in Babbage with Rose, James, Heather, and some other folks (can't remember, honestly) just hanging out. We jacked the space heater way up so it felt like a sauna (aka reeeeeeal nice) and just talked about stuff. Around the 2-3 AM mark Heather and I got bundled up and went out to go to the pharmacy (which turned out to actually be literally right next door) and buy chocolate and nail polish. And then I spent somewhere between 1.5 to 2 hours painting my nails a fabulously sparkly red color called "Devil's Stare" from a brand called "Sinful Colors" - a combination which strikes me as being nothing short of <em>wild</em>.</p>
<p>At around 5 AM, everyone decided to go to sleep. I was the only person to go home, and honestly the only reason I did so was because I knew I'd want a shower in the morning. So I spent about 15 minutes trying to find the stupid switch to turn off the kitchen lights, finally gave up and went home, and fell asleep a short while after the sun rose.</p>
<p> [1]: I have - embarassingly - forgotten this person's name. Based on comparing a picture taken at this time with the RC directory, this person seems to be Nicholas, but I'm not actually sure. *deep sigh*</p>
<h2>Friday</h2>
<p>Arrived ~18:00, departed ~1:15, total time at RC 7h15m. As always, Friday doesn't count as a day because RC is technically not in session.</p>
<p>Arrived exceedingly late since I woke up around, you know, 5. Got to RC and did very little before noticing a very large party leaving for dinner, which I joined and ate with (despite saying before I left that I'd had breakfast recently, so I "wasn't going to get anything"). We went out to get Chinese food, then went to a place that served Asian dessert of some kind (I've forgotten). It was beyond lovely, honestly.</p>
<p>(I also mentioned at dinner that I'd missed a week of blogging, so during a discussion with <a href="https://github.com/chirs">Chris</a> about it I posted to a Zulip topic named "shame AJ" soliciting ideas for a punishment as well as moving the regular Iron Blogger meeting to Tuesday due to the Spring 1 introduction day.)</p>
<h2>Executive summary</h2>
<p>This week was particularly unproductive. I only did a little bit of work on icalc, my C project, and other than that the only really RC-related project I did was my security club presentation on cryptography basics. This was mostly because my sleep schedule was super messed up from Brussels, and then got messed up again (just as it was getting back to normal) on Thursday.</p>
<p>This week was also very emotional, since it was the Winter 1s' last week. To all my Winter 1 friends: you made my time at RC amazing and welcoming and exciting and wonderful and I loved being around you all. And I will miss you for a very long time. &#x3C;3</p>
<p>(*<em>starts crying a lil bit</em>*)</p>
<p>Total time at RC 38 hours 40 minutes; cumulative time 239 hours 25 minutes.</p>
]]></description><link>https://strugee.net/blog/2017/02/rc-week-6</link><guid isPermaLink="true">https://strugee.net/blog/2017/02/rc-week-6</guid><category><![CDATA[personal]]></category><category><![CDATA[blaggregator]]></category><pubDate>Sun, 19 Feb 2017 07:42:52 GMT</pubDate></item><item><title><![CDATA[Gender representation at RC]]></title><description><![CDATA[<p>So I want to talk (real quick) about gender representation in tech. Specifically, the fact that it's abysmal. Women[1] usually account for, at most, <a href="https://www.cnet.com/news/women-in-tech-the-numbers-dont-add-up/">30% of the employees in a company</a> and that number is often much lower. Even at the companies where it's 30%, that number is misleading because it doesn't adress management positions which are often much lower. (For reference, women accounted for about 59% of the overall workforce as of 2015, when the article I pulled those numbers from was published.) <a href="http://fortune.com/2014/10/02/women-leave-tech-culture/">Here's an article</a> that says that on average, women leave the industry within 7 years of being in it. Let me repeat that, because I didn't say they leave their jobs, or take a break. They completely leave the <em>entire technology industry</em>. And unfortunately it makes sense, since incidents of sexism in tech are <a href="">rampant</a>.</p>
<p>Unlike (most of) the rest of the tech world, the <a href="https://recurse.com">Recurse Center</a> is mostly (completely?) gender-balanced. I want to point out that while for years I've believed in diversity, it didn't become clear to me how much <a href="https://www.opensocietyfoundations.org/voices/implicit-bias-and-social-justice">implicit bias</a> I held until I joined RC. I find that, having previously spent significant amounts of time in environments that were predominantly white, cis and male, <strong>I find myself needing to self-correct discriminatory and gender-based unconscious assumptions significantly less frequently at RC</strong>. In other words, my subconscious is making less incorrect, gender-based suggestions about what people are like that I then have to consciously reject. I would attribute this almost 100% to the fact that at RC I'm surrounded by lots of people who are a) super talented and know their shit and b) aren't male.</p>
<p>If I have a point to this blog post (and I'm not sure that I do), it'd be to underscore what many have said before me: representation and role models are important. Advocating for gender equality is good and important, but in the end what really matters is what's actually in people's heads. That's mostly influenced by what they see in their immediate lives, and that's why representation is so important - believing in equality is great, but presenting actual evidence to your subconscious that its biases are incorrect is a much more powerful way to improve the way you perceive the world.</p>
<p>If folks have any comments or different perspectives, I'd love to hear them <a href="/contact">privately</a> or via <a href="https://webmention.net/">WebMention</a>.</p>
<p> [1]: I'm focusing on women here because I'm not aware of any statistics about non-binary people in tech. But it's worth noting that it's a huge problem for them, too.</p>
]]></description><link>https://strugee.net/blog/2017/02/gender-representation-at-rc</link><guid isPermaLink="true">https://strugee.net/blog/2017/02/gender-representation-at-rc</guid><category><![CDATA[personal]]></category><category><![CDATA[blaggregator]]></category><pubDate>Tue, 14 Feb 2017 22:01:19 GMT</pubDate></item><item><title><![CDATA[RC week 5]]></title><description><![CDATA[<p>This is week 5 of being at the <a href="https://recurse.com">Recurse Center</a>.</p>
<!-- TODO: this is a bug
<script async defer src="https://www.recurse-scout.com/loader.js?t=3d49e64361d4b897ffd2fd56dcd93ca4"></script>
-->
<h2>Day 15</h2>
<p>Arrived ~10:20, departed ~16:30, arrived ~20:00, departed ~23:30, total time at RC 9h40m.</p>
<p>Somehow managed to get up early and arrive at my checkin early, despite being dead-tired (I couldn't get to sleep so I was running on ~5 hours of sleep). Spent most of today working on my HTTPS presentation, but took 30 minutes to an hour or so off to make a couple small improvements to my website - mostly just trimming the projects page and adding information to the contact page about how to communicate securely with me. Left for a while to have dinner with a friend and returned via the subway[1] to work on my HTTPS presentation some more.</p>
<p>(Note 1/31: I felt quite productive today, but in hindsight really didn't get a whole lot done since I was just so tired.)</p>
<p> [1]: which truthfully made me feel unreasonably accomplished since my phone died right as I looked up directions, but I got on the right subway and figured out I could transfer and take a closer line halfway through and eventually made it back anyway</p>
<h2>Day 16</h2>
<p>Arrived ~10:20, departed ~23:10, total time at RC 12h50m.</p>
<p>Spent - no joke - basically all of today working on my HTTPS presentation, which in addition to actually writing the content entailed reminding myself of how things like e.g. TLS False Start actually work. Reminding and/or properly learning (for False Start in particular I had a vague idea of how it worked before, but didn't really understand it).</p>
<p>Took about an hour off in the evening to help repaint a large stretch of wall in the space as part of the cleaning party. Then went back to HTTPS. Highly productive day.</p>
<h2>Day 17</h2>
<p>Arrived ~11:30, departed ~17:40, total time at RC 6h10m.</p>
<p>Caught up with some GitHub stuff in the morning before teaching HTTPS. We went for an hour and a half and <em>still</em> skipped the entire section on TLS performance because HTTPS is complicated and hacky and also <em>really</em> terrible. (As <a href="https://github.com/eeclaire">Claire</a> put it, "I'm now terrified of browsing the web." Me too, Claire. Me too.) I think it went really well, even though it was a little overwhelming for everyone at times.</p>
<p>Spent a bit of time watching YouTube videos on how Diffie-Hellmann works and how Elliptic-Curve Diffie-Hellman (ECDHE) works - we'd touched on both of these during the presentation and I needed to put them in Zulip. The one on plain Diffie-Hellmann was just a refresher, but the one on ECDHE was something I'd previously tried to watch <em>several</em> times and had always been too confused. But, this time I got it! Whooo! So that felt awesome.</p>
<p>Left early to go home and sqeeze in some laundry before closing out the evening by going to an RC-organized talk on <a href="https://crystal-lang.org/">Crystal</a>.</p>
<h2>Day 18</h2>
<p>Arrived ~10:30, departed ~14:30, total time at RC 4h0m.</p>
<p>Did just a smidge of work on pump.io before going to Abstract Salad Factory, then heading home to catch my flight to Brussels.</p>
<h2>Friday</h2>
<p>Not at RC. Total time at RC 0h0m.</p>
<p>In Brussels for <a href="https://fosdem.org/2017/">FOSDEM</a>.</p>
<h2>Executive summary</h2>
<p>This week had its ups and downs. I was really productive on the HTTPS stuff, but other than that I didn't reeeally get a lot done.</p>
<p>Total time at RC 32 hours 40 minutes; cumulative time 230 hours 45 minutes.</p>
]]></description><link>https://strugee.net/blog/2017/02/rc-week-5</link><guid isPermaLink="true">https://strugee.net/blog/2017/02/rc-week-5</guid><category><![CDATA[personal]]></category><category><![CDATA[blaggregator]]></category><pubDate>Mon, 13 Feb 2017 07:23:28 GMT</pubDate></item><item><title><![CDATA[RC week 4]]></title><description><![CDATA[<p>This is week 4 of being at the <a href="https://recurse.com">Recurse Center</a>.</p>
<!-- TODO: this is a bug
<script async defer src="https://www.recurse-scout.com/loader.js?t=3d49e64361d4b897ffd2fd56dcd93ca4"></script>
-->
<h2>Day 11</h2>
<p>Arrived ~10:50, departed ~23:20, total time at RC 12h30m.</p>
<p>Arrived 20 minutes late for my checkin, but checked in with <a href="https://stanzheng.com/">Stanley</a> and <a href="https://github.com/heatherbooker">Heather</a> anyway. Started <a href="https://pump.strugee.net/alex/note/q1vco7XwRk6JsYteqTQqPA">an experiment</a> where I turned on <a href="https://www.eff.org/https-everywhere">HTTPS Everywhere</a>'s "block all unencrypted requests" option, which has been, uh, <em>interesting</em> so far. Spent most of the day working on blog-related things - finishing up and publishing <a href="https://strugee.net/blog/2017/01/rc-week-3">RC week 3</a> (which I just straight up forgot to publish on Saturday) along with <a href="https://strugee.net/blog/2017/01/surveillance-priorities">Surveillance priorities</a> which I finished exactly two minutes before[1] the start of this week's Iron Blogger challenge meeting. Other than that, poked a little at implementing <a href="https://github.com/processone/ejabberd/issues/1364">OCSP stapling support</a> in <a href="https://www.ejabberd.im/">ejabberd</a>, which is something I want to do for a number of reasons:</p>
<ol>
<li>It'll give me a chance to look at some Erlang, which will be a really interesting experience</li>
<li>It'll give me a chance to try doing something with the OpenSSL API, which is a complete horror show but nonetheless something I would like (some) experience in</li>
<li>I run ejabberd in production and, you know, really want stapling support</li>
</ol>
<p>Ended the night by going to Fat Cat.</p>
<p> [1]: I actually already had a longer post mostly written, but I realized as I was going to finish it that the experiment that I was proposing had a) been done before and b) mostly failed. So I ended up writing "Surveillance priorities" from scratch in a hurry instead.</p>
<h2>Day 12</h2>
<p>Arrived ~10:50, departed ~17:50, total time at RC 7h0m.</p>
<p>Arrived late again, despite leaving a good <em>15 to 20 minutes earlier</em>. Freaking subway. ANYWAY. Checked in on Zulip instead of in person. The day was semi-productive - I worked a little on my operational security presentation for tomorrow, but a lot of my time was spent talking with Rose, discussing the programming language I'm planning to work on/invent. Left early to do laundry at home and then closed out the evening by finishing my presentation as well as finding and reporting a (common and uninteresting) security vulnerability in a web application[2] - unnamed for obvious reasons.</p>
<p>As a side note, as Stanley put it, <a href="https://www.recurse.com/blog/112-how-rc-uses-zulip">I'm RC famous</a>! Kind of, I guess. \o/</p>
<p> [2]: I actually thought I found the same problem in another project, except it turned out that I totally missed something and so instead of being cool I ended up embarrassing myself on GitHub instead. Sadface :(</p>
<h2>Day 13</h2>
<p>Arrived ~10:35, departed ~00:10, total time at RC 13h35m.</p>
<p>Arrived in the middle of my checkin. Spent the morning taking care of some general maintenance tasks, including getting ready to present on operational security, which I did in the afternoon. Spent most of the rest of the day thinking about the design of my programming language and putting it together into a blog post. In the evening, started trying to fix <a href="https://github.com/sandstorm-io/sandcats/issues/153">a bug in Sandstorm</a> which was breaking my production install. Also, had my Princeton interview via Skype, which I think went extremely well. Yay! My interviewer was awesome and we had a really interesting conversation.</p>
<p>As a side note, I got to wear my new libuv shirt today, and it is seriously <a href="https://pump.strugee.net/alex/image/zAFejrr9RY6pLFHpSlXBbQ">the coolest shirt I've ever seen</a>.</p>
<h2>Day 14</h2>
<p>Arrived ~10:35, departed ~1:40, total time at RC 15h5m.</p>
<p>Arrived in the middle of my checkin again (still better than earlier in the week, though). It wasn't anything groundbreaking, but it did give me the opportunity to get more hands-on Mercurial experience (and learn a lot about Mercurial's different branching styles). Working in an unfamiliar codebase was also a good experience, as was dealing with Sandstorm's custom UDP protocol. It wasn't really what I meant to do with the day, but also not a total wash.</p>
<p>Attended Thursday presentations followed by Game Night in the evening which was <em>very</em> fun - I played some poker, then lost at chess a bunch of times to Hussein (even when we played Blitz Chess, which he said he was bad at). Then we switched to Go for a while. Finished out the evening by just hanging out with <a href="http://another.workingagenda.com">Fenimore</a>, <a href="https://github.com/Husseinfarah93">Hussein</a>, and <a href="http://kacyjam.es/">James</a>, which was a lot of fun.</p>
<h2>Friday</h2>
<p>Arrived ~15:10, departed ~23:50, total time at RC 8h40m. As always, Friday doesn't count as a day because RC is technically not in session.</p>
<p>Slept in pretty late today. Attended the monthly pump.io meeting immediately upon arrival (sadly Evan wasn't there). Spent the rest of the day responding to PRs - which took a lot of time but didn't actually result in a lot of code - then authoring a Huginn PR to <a href="">add titles</a> to all pages.</p>
<h2>Executive summary</h2>
<p>In a shocking turn of events, this week was relatively productive, but could've been better. I challenged myself a little bit, but I think I can and should do more.</p>
<p>Checkins really helped. Even when I missed the checkin it provided motivation to get up and get moving. 10:30 may be a little too early for me though, so I'm not sure if I'll continue doing it next week.</p>
<p>Total time at RC 56 hours 50 minutes; cumulative time 198 hours 5 minutes.</p>
]]></description><link>https://strugee.net/blog/2017/01/rc-week-4</link><guid isPermaLink="true">https://strugee.net/blog/2017/01/rc-week-4</guid><category><![CDATA[personal]]></category><category><![CDATA[blaggregator]]></category><pubDate>Mon, 30 Jan 2017 18:16:31 GMT</pubDate></item><item><title><![CDATA[New programming language part I: Handlers]]></title><description><![CDATA[<p>So my latest project at the <a href="https://recurse.com">Recurse Center</a> is a new programming language, as yet unnamed. Basically this was inspired by my <a href="https://strugee.net/presentation-security-design">security design</a> presentation in which I laid out a couple ways you can improve programs' security designs, like process separation. And it occurred to me: why is this so difficult? Something should be doing this for me. Enter... whatever the hell I end up calling my language.</p>
<p>One of the most important building blocks of the language is something that I'm currently calling a "Handler". A Handler is basically a segregated piece of application code that handles some task or problem domain. For example, a Handler for outgoing DNS requests (syntax subject to change, obviously):</p>
<pre><code>Handler DNS {
    function getAddressFromHostname(hostname) {
        // Very much pseudocode - all function calls here are example OS calls

        sendDnsQuery(hostname);
        while (!haveDnsResult()) {
            sleep(1);
        }
        
        return getDnsResult();
    }
}
</code></pre>
<p>This Handler has one simple method, <code>getAddressFromHostname()</code>. It sends a DNS query, blocks until it has a result, and then returns the result.</p>
<p>What's cool about this Handler is that it will be run in its own process - in other words, each Handler is automatically transformed into a privilege-separated process. However, <code>getAddressFromHostname()</code> can still be called from other, high-level Handlers! The language will do all the data marshalling for you, so from a language perspective it looks like a regular function call even though in practice it's going cross-process.</p>
<p>Now, let's improve our Handler a little bit. It's pretty unfortunate that we can only make one DNS request at a time (since it's blocking), so let's use an event loop.</p>
<pre><code>Handler DNS is eventLoop {
    function getAddressFromHostname(hostname) {
        // Still pseudocode

        return sendDnsQuery(hostname, function(address) {
            return address;
        });
    }
}
</code></pre>
<p>We specified that the <code>DNS</code> Handler is an event loop, so the language automatically set up a Node-style event loop - we never actually called anything to enter an event loop, it just sort of happened as a construct of the language. Note also the nice async-aware return syntax - the result of <code>sendDnsQuery()</code> is returned to <code>getAddressFromHostname()</code>'s caller, and the result of <code>sendDnsQuery()</code> is specified by the return value of the anonymous function callback.</p>
<p>We can improve correctness even more by specifying that the Handler is not allowed to make syncronous I/O calls at all:</p>
<pre><code>Handler DNS is eventLoop, async {
    // ...
}
</code></pre>
<p>Handlers let you pick and choose different elements and design choices for different parts of your application. For example, if you had a Handler responsible for processing data, it might make sense to restrict it to being entirely functional:</p>
<pre><code>Handler incomingData is functional {
    // ...
}
</code></pre>
<p>In such a Handler, any functions with side effects wouldn't be callable, enforced at compile-time (possibly parse-time, depending on whether I can make it compiled or not given the type system). Perhaps you want to spawn a new sandbox process for each piece of incoming data (OpenSSH does this, for example, when first receiving authentication data from untrusted users):</p>
<pre><code>// The `ephemeral` keyword will probably be something better, but for now...
Handler incomingData is functional, ephemeral {
    // ...
}
</code></pre>
<p>If your application requires root - for example, if you were writing an NTP daemon that needed to call <code>setTimeOfDay()</code> - that's also specified at the Handler level:</p>
<pre><code>Handler incomingData is root {
    // ...
}
</code></pre>
<p>This should give you some idea of why Handlers are really interesting, even beyond the process separation concept that underlies them. (It's also worth noting that while I've focused mostly on daemons, this can also be used to securely implement e.g. <code>file</code>.) I'm really excited to get these ideas out there so I'll stop for now, but pretty soon I'll write another blog post talking about the type system.</p>
]]></description><link>https://strugee.net/blog/2017/01/new-programming-language-part-i-handlers</link><guid isPermaLink="true">https://strugee.net/blog/2017/01/new-programming-language-part-i-handlers</guid><category><![CDATA[personal]]></category><category><![CDATA[blaggregator]]></category><pubDate>Thu, 26 Jan 2017 15:59:20 GMT</pubDate></item><item><title><![CDATA[Surveillance priorities]]></title><description><![CDATA[<p>For several years now I've been really interested in technology policy - things like security, privacy and censorship, and especially how those things relate to both mass surveillance and freedom-respecting software. That's why I follow organizations like Fight for the Future and the EFF, and why I e.g. participated in the movement to stop SOPA and PIPA, the internet censorship bills.</p>
<p>But a week or so ago I had a realization: I'm not interested in surveillance law anymore.</p>
<p>It's clear to me that Congress is completely busted. The 113th Congress came <a href="http://www.pewresearch.org/fact-tank/2014/12/29/in-late-spurt-of-activity-congress-avoids-least-productive-title/">very, very close</a> to being the least productive Congress in modern history. Our current Congress isn't particularly good either, although they are (as far as I know) not as bad as the 113th - but they're still not good enough that I'm confident in their ability to actually, you know, pass laws. Even if we <em>could</em> get Congress to pass laws at all, it's unclear whether we could actually get them to pass laws curtailing mass surveillance. Over and over again we see Congress trying to pass misguided laws that weaken encryption, damage the DNS, and do all sorts of other seriously nasty (and hacky!) things - it just doesn't seem very reasonable to me to assume that they'd change their minds and decide to do (what we think is) the right thing[1].</p>
<p>This is why I'm not interested in surveillance law anymore. I find it to be a waste of time. Instead, I've shifted my focus towards systems that are fundamentally designed to resist surveillance and censorship. That's why I advocate for <a href="https://whispersystems.org/">Signal</a> and why I work on <a href="http://pump.ioe">pump.io</a>: because these are both systems designed from the ground up to, among other things, essentially be unaffected by surveillance law. Who cares if Congress passes a law that says they can surveil pump.io users? Congress saying a bunch of words doesn't change the fact that technically speaking, that's quite hard to do. Certainly it's more difficult than surveilling e.g. Facebook.</p>
<p>As Moxie Marlinspike puts it in <a href="https://youtu.be/xIiklPyS8MU?t=33m54s">this talk</a> on PKI's flaws and an alternative system called Convergence:</p>
<blockquote>
<p>And, you know, with this legislation that's been coming up recently like COICA and PROTECT IP and this kind of thing, you know - to me the real lesson here isn't whether this passes or not because there's been, you know, some kind of heroic efforts to prevent this legislation from going through. But I think, you know, the thing to take away from this is that they're <em>trying</em>. To pass regulation that messes with this stuff. And maybe one day they'll succeed.</p>
</blockquote>
<p>Trying to make Congress do the right thing is, I feel, akin to an endless arms race: they don't seem to be getting the message and it's doubtful that they'll stop in the near- or medium-term future.</p>
<p>A much better solution is this: implement secure-by-default, freedom-respecting, encrypted and/or federated systems, and be done. Forever.</p>
<p> [1]: honestly, I think a big problem with this is that a lot of Congress is old white guys. Emphasis on old. The problem of people in the legal sphere not understanding technology, especially technology relating to security, privacy and encryption, has cropped up before. Consider, for example, the judge who <a href="https://nakedsecurity.sophos.com/2016/07/01/judge-decides-we-dont-have-any-right-to-privacy/">ruled</a> that a Tor user had "no reasonable expectation of privacy" because he literally could not wrap his head around how Tor worked and what the FBI did.</p>
]]></description><link>https://strugee.net/blog/2017/01/surveillance-priorities</link><guid isPermaLink="true">https://strugee.net/blog/2017/01/surveillance-priorities</guid><category><![CDATA[politics]]></category><category><![CDATA[privacy]]></category><category><![CDATA[musings]]></category><pubDate>Mon, 23 Jan 2017 21:55:27 GMT</pubDate></item><item><title><![CDATA[RC week 3]]></title><description><![CDATA[<p>This is week 3 of being at the <a href="https://recurse.com">Recurse Center</a>. </p>
<h2>Monday</h2>
<p>Arrived ~12:50, departed ~00:10, total time at RC 11h20m. Not Day 8 because Martin Luther King Day was today, so RC was not technically in session.</p>
<p>Lazy day today. Participated in an interesting discussion in the <a href="https://conversations.im">Conversations</a> MUC about <a href="https://wiki.xmpp.org/web/Easy_Onboarding">Easy XMPP</a> which led to me spending a couple hours working on <a href="https://github.com/ge0rg/easy-xmpp-invitation">this onboarding webpage project</a> (live version <a href="https://yax.im/i/#alex@strugee.net">here</a>). Spent about 5 minutes deploying OCSP Must Staple to <a href="https://nodecompat.com">nodecompat.com</a> and <a href="https://isthefieldcontrolsystemdown.com">isthefieldcontrolsystemdown.com</a> and then about 30 discussing exactly what OCSP Must Staple is with <a href="https://jessewalling.com/">Jesse</a>. Also, submitted a talk on <a href="https://github.com/straticjs/generator-stratic">Stratic</a> to <a href="https://www.linuxfestnorthwest.org/">LinuxFest Northwest</a>.</p>
<p>Truthfully I spent a fair amount of my time in #pump.io on Freenode and in particular, got confirmation that <a href="https://e14n.com/evan">Evan</a> will be able to attend this month's pump.io meeting, which is fantastic. Closed out the evening by finishing my last college app and then spending several hours (i.e. waaay longer than I meant to) looking into parts for building an <a href="https://xkcd.com/413/">xkcd-style robot</a> for the space.</p>
<h2>Day 8</h2>
<p>Arrived ~13:10, departed ~23:00, total time at RC 9h50m.</p>
<p>Truthfully, not really sure where today's time went. The biggest real thing I did was fixing a pretty serious <a href="https://github.com/pump-io/pump.io/issues/1266">regression</a> in pump.io (introduced during the Express 3.x migration) that caused realtime functionality not to work. Plus I wrote the above text (under "Monday") because I didn't have time the previous night. *sigh*</p>
<p>However, I <em>did</em> spend a lot of the evening starting and then finishing my presentation on <a href="https://strugee.net/presentation-webapp-security">webapp security</a> for tomorrow. So that's something.</p>
<h2>Day 9</h2>
<p>Arrived ~13:40, departed ~21:30, total time at RC 7h50m.</p>
<p>Arrived only just in time for my presentation on <a href="https://strugee.net/presentation-webapp-security">webapp security</a> due to a series of unfortunate (mostly subway-related) mishaps. It went really, really well - although we did run for 30 minutes longer than I'd planned, which I was surprised at since last week we only ran a couple minutes over but I had twice as many slides. Covered (mostly SQL) injections, cross-site scripting, password handling, and Cross Site Request Forgery. After that, had an extensive discussion with <a href="https://github.com/ebb-tide">Deniz</a> and <a href="https://github.com/heatherbooker">Heather</a> about security and related subjects (email, selfhosting, the law, and how I think about security systems, mostly) before heading out to Walgreen's to buy some Airbourne, since I think I may be on the verge of getting a bit sick. :(</p>
<p>(Heather and Deniz also suggested I use the word "obviously" less, although it seems like other than that people really like my teaching style. So that feels good.)</p>
<p>The rest of the day was pretty boring: did a <a href="https://github.com/pump-io/pump.io/blob/master/CHANGELOG.md#211---2017-01-18">patch release</a> for pump.io so that the regression fix that landed yesterday would go out to users. Took care of some system administration maintenance, then did some pump.io issue triaging and some minor fixups in the GitHub repository (notably improvements to the wiki homepage and fixing the Releases page, which was kinda borked).</p>
<p>Finally, since I've been doing a bad (read: <em>terrible</em>) job trying Mercurial so far, I've decided to force myself to use it:</p>
<pre><code>$ cd Development
$ rm -rf icalc
$ # Muck around for a bit because I thought the following would work out-of-the-box, but it didn't
$ hg clone git+ssh://github.com:strugee/icalc.git
</code></pre>
<p>I'll end up using it tomorrow since I'm committing to work on icalc for the entire day. I've been really bad about working on it.</p>
<h2>Day 10</h2>
<p>Arrived ~13:10, departed ~17:45, total time at RC 4h35m.</p>
<p>Arrived riiiight as Abstract Salad Factory was starting. Had a delicious salad and came up with an excellent idea for an RC activity[1] before attending Beginner's Club, which was on testing (and also conveniently in the same room). Spent a little time taking care of business (emails, etc.) before digging into Mercurial by looking at the "Migration from Git" wiki page and just reading links. Feel like I'm on a good track there.</p>
<p>Attended Thursday presentations; came up with a really awesome web standards idea during that that I was <em>extremely</em> excited to propose to the standards community. Looked it up while the jobs fair was getting started - turns out it's <a href="https://w3c.github.io/webappsec-mixed-content/#strict-opt-in">already a thing</a>. So that was disappointing. Left for home pretty soon after that.</p>
<p> [1]: one weekend where we take over the main space and marathon through all three extended director's cut Lord of the Rings movies</p>
<h2>Friday</h2>
<p>Arrived ~1:00, departed ~00:50, total time at RC 11h50m. As always, Friday doesn't count as a day because RC is technically not in session.</p>
<p>Spent a lot of time today pairing with <a href="https://github.com/heatherbooker">Heather</a> on improving the <a href="https://github.com/asinghamgoodwin/AbstractSaladFactory">Abstract Salad Factory webapp</a> before devolving into silly shell-related projects like installing <a href="https://github.com/nvbn/thefuck">thefuck</a> and perusing <a href="https://github.com/ayust/underhanded">underhanded</a>, which we actually learned a lot from (because we kept looking up the options and commands the aliases used). Also found out that the version of <a href="">sl</a> packaged in Debian is weirdly old. Like 10 years old.</p>
<p>In the evening, went to Bottle Share Friday which really ended up being "have lots of food and play a game of Codenames but mostly just talk" Friday. Very fun.</p>
<p>Wrapped up the evening with a little bit of Just Dance followed by some <a href="https://github.com/pump-io/pump.io/pull/1272">pump.io work</a> and more pairing on the Abstract Salad Factory app, which ended with me and Heather wondering if the  version deployed to Heroku didn't actually match the version on GitHub.</p>
<p>Also, signed up for checkins for next week as an accountability tool.</p>
<h2>Executive summary</h2>
<p>Week started out similar to the past week or two - I wasn't terribly good about sticking to RC stuff. However, I brought it back in the end! So I think I'm back on track.</p>
<p>Total time at RC 45 hours 25 minutes; cumulative time 141 hours 15 minutes.</p>
]]></description><link>https://strugee.net/blog/2017/01/rc-week-3</link><guid isPermaLink="true">https://strugee.net/blog/2017/01/rc-week-3</guid><category><![CDATA[personal]]></category><category><![CDATA[blaggregator]]></category><pubDate>Mon, 23 Jan 2017 19:38:24 GMT</pubDate></item><item><title><![CDATA[RC week 2]]></title><description><![CDATA[<p>This is week 2 of being at the <a href="https://recurse.com">Recurse Center</a>. </p>
<h2>Day 4</h2>
<p>Arrived ~12:30; departed ~23:45; total time at RC 11h15m.</p>
<p>Today is day four because last week only had three days - Monday was off because of New Years.</p>
<p>Spent most of today working on Stratic. Paired with <a href="https://github.com/atungare">Ajay</a> to fix a really nasty bug in stratic-paginate-indexes caused by some <a href="https://github.com/gulpjs/vinyl/issues/125">incorrect Vinyl documentation</a>, during which he showed me how <code>Array.prototype.map</code> is a nice taste of functional programming available in JS, as well as <a href="https://github.com/s-a/iron-node">Iron Node</a> - I had only previously used the built-in <code>node debug</code>. (Spent <em>hours</em> on this bug at home but solved it in ~30 minutes while pairing.) Spent most of the rest of the day getting pagination to function properly on strugee.net, which was surprisingly hard due to there just being a lot of edge cases to handle. (That, plus the fact that it took a while for me to settle on a design I liked.) Spent some more time polishing or updating other parts of strugee.net.</p>
<p>In the evening, spent some time pairing with <a href="https://github.com/Jmeggesto">Jacqueline</a>, teaching them to set up a cronjob using a DigitalOcean VPS.</p>
<h2>Day 5</h2>
<p>Arrived ~10:30; departed ~23:00; total time at RC 12h30m.</p>
<p>Worked on Stratic almost non-stop for literally the entirety of today (again). Started and (almost) finished <a href="https://github.com/strugee/stratic-indexes-to-rss">stratic-indexes-to-rss</a> and used the new feeds available on strugee.net to add myself to <a href="https://blaggregator.recurse.com">Blaggregator</a>. Took a quick poll on Zulip asking what the threshold was for there being so many repositories in a project that it warranted its own GitHub repo; instead of getting any replies, talked to <a href="https://stanzheng.com/">Stanley</a> in person who convinced me when he said, "what are the cons?" and I said, "good question! I dunno." Hence, founded the <a href="https://github.com/straticjs">straticjs</a> GitHub org. From there, did a huge push towards a <a href="https://github.com/straticjs/generator-stratic">generator-stratic</a> 1.0.0 release. It's very close - the core is done, but there are a lot of additional options that need to be added. I also can't release it before I fix up some TODOs currently in stratic-indexes-to-rss.</p>
<p>Additionally, took about a half hour break midday to give some ideas to <a href="https://github.com/heatherbooker">Heather</a>, who is teaching a workshop on Git tomorrow, and took another half-hour or so to watch non-technical lighning talks around 17:30(?).</p>
<h2>Day 6</h2>
<p>Arrived ~11:00; departed ~21:50; total time at RC 10h50m.</p>
<p>Spent a significant portion of the morning thinking about Zulip[1] design before and while filing <a href="https://github.com/zulip/zulip/issues/3235">this long bug</a> proposing some improvements to the way unread counts and notifications work. Also reviewed a couple <a href="https://prism-break.org/">PRISM Break</a> Pull Requests - I realize now I should've written about this on here (since it was <em>extrmemely</em> exciting to me!) but I'm now a comaintainer of PRISM Break. Thanks, <a href="https://github.com/nylira">@nylira</a>!</p>
<p>Spent a little time polishing my <a href="https://strugee.net/presentation-security-design">security presentation</a> for tomorrow. At first I spent a lot of time trying to find a style I liked on my own, but eventually I just threw in the towel and used <a href="https://github.com/bespokejs/bespoke-theme-cube">bespoke-theme-cube</a> which is what I had always previously used (since it's what <a href="https://github.com/bespokejs/generator-bespoke">generator-bespoke</a> generates).</p>
<p>Finally, spent some time working on pump.io. Filed a couple bugs on future improvements, notably one proposing that we add code to <a href="https://github.com/pump-io/pump.io/issues/1259">automagically manage Let's Encrypt certificates</a>, which I'm very excited about for several reasons. I also implemented <a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Strict-Transport-Security">HTTP Strict Transport Security</a> which is a huge win for the network's security. The absence of HSTS was also the last remaining issue preventing me from gaining an A+ on SSL Labs for <code>pump.strugee.net</code> since I stopped using a reverse proxy setup, so that feels good.</p>
<p>Overall, I would say that this day was of average or slightly below average productivity. Also, while I got some useful stuff done, none of it was really related to RC (with the exception of the security presentation, thought that didn't take that much time).</p>
<p> [1]: for non-Recursers, <a href="https://zulip.org/">Zulip</a> is a really excellent realtime chat tool that RC uses for communication.</p>
<h2>Day 7</h2>
<p>Arrived ~12:20, departed ~22:30, total time at RC 10h10m.</p>
<p>Fixed a couple minor issues with my <a href="https://strugee.net/presentation-security-design">security presentation</a> before deploying it to strugee.net in preparation for my presentation. The talk itself went really well; my audience seemed to follow most of what I was presenting and I got some really good questions. As I stated at the beginning of the presentation, security is a <strong>huge</strong> topic, so really I looked at the list of subtopics and basically just picked one that I thought was interesting. There's a huge amount that I didn't cover so (partly) prompted by <a href="https://github.com/heatherbooker">Heather</a>, I'm now planning on doing weekly security presentations. Next week's will be on web application security and is already on the RC calendar.</p>
<p>Presented <a href="https://github.com/straticjs/generator-stratic">Stratic</a> during the weekly Thursday 5-minute presentations. I got up and said, "I'm super nervous about this talk because it's literally <em>all live demos</em>" and the audience laughed. And sure enough, I'd forgotten to add a dependency, so my <code>gulp serve</code> demonstration failed. That was okay though, because I still got to show the really interesting bits, which is the Unixy design in the gulpfile.</p>
<p>Finally, spent a lot of the evening with <a href="https://github.com/heatherbooker">Heather</a> working on this sickass "made at Recurse Center" GitHub README badge:</p>
<!-- TODO: fix this to use the real URL when it's up somewhere -->
<p><img src="https://people.strugee.net/~alex/made_at_RC.svg" alt="&#x22;made at Recurse Center&#x22; GitHub-style badge"></p>
<p>Whoohoo! \o/</p>
<h2>Friday</h2>
<p>Arrived ~13:15, departed ~22:20, total time at RC 9h5m. As always, Friday doesn't count as a day because RC is technically not in session.</p>
<p>Had a very nice time walking to RC this morning which took about an hour because I kept stopping to take pictures - that felt really really good; it's been <em>way</em> too long since I've taken any and I missed it far more than I realized. Spent some time having a very nice discussion (both on Zulip and in real life) about different approaches to managing dotfiles in version control. Also spent some time discussing the design of git (particularly history rewriting, which I've <a href="/blog/2016/10/github-squash-and-merge-default-considered-harmful">previously written about</a>) and resolved that something I should work on at RC is getting experience with <a href="https://www.mercurial-scm.org/">Mercurial</a>. In between both of those I spent some time looking into where to put the badge that <a href="https://github.com/heatherbooker">Heather</a> and I made. Seems like the answer is <a href="https://swag.recurse.com/">swag.recurse.com</a> so I started looking at the project setup and plan to send some more PRs in the future.</p>
<p>Throughout the day I also reported a couple minor <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1331117">Zulip</a> <a href="https://github.com/zulip/zulip/issues/3300">issues</a> as well as two Firefox bugs, <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1331117">one of which</a> got marked as a duplicate and <a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1331121">one of which</a> is still UNCONFIRMED.</p>
<h2>Executive summary</h2>
<p>Pretty productive week but could've been better. In particular I didn't do a good job of working on "RC projects" and instead spent too much time on existing personal projects, primarily Stratic and pump.io.</p>
<p>Total time at RC 53 hours 50 minutes; cumulative time 95 hours 50 minutes (first week estimated).</p>
]]></description><link>https://strugee.net/blog/2017/01/rc-week-2</link><guid isPermaLink="true">https://strugee.net/blog/2017/01/rc-week-2</guid><category><![CDATA[personal]]></category><category><![CDATA[blaggregator]]></category><pubDate>Sat, 14 Jan 2017 21:39:16 GMT</pubDate></item><item><title><![CDATA[RSS and pagination on strugee.net]]></title><description><![CDATA[<p>RSS and pagination are now enabled on strugee.net's blog, thanks to <a href="https://github.com/strugee/stratic-indexes-to-rss">stratic-indexes-to-rss</a> and <a href="https://github.com/strugee/stratic-paginate-indexes">stratic-paginate-indexes</a> respectively.</p>
<p>The pagination code is already pretty solid although there's always room for <a href="https://github.com/strugee/stratic-paginate-indexes/issues">improvement</a> - thanks to <a href="https://github.com/atungare">Ajay Tungare</a> for pairing with me at the <a href="https://recurse.com">Recurse Center</a> and helping me catch the bug! However, I'm not particularly confident in the RSS code, since RSS is actually somewhat tricky to properly handle. Because of that, I would seriously appreciate it if people tried adding the RSS feeds to their readers and seeing if anything breaks. If so, <a href="https://github.com/strugee/stratic-indexes-to-rss/issues/new">let me know</a>!</p>
<p>Cheers!</p>
]]></description><link>https://strugee.net/blog/2017/01/rss-and-pagination-on-strugee.net</link><guid isPermaLink="true">https://strugee.net/blog/2017/01/rss-and-pagination-on-strugee.net</guid><category><![CDATA[development]]></category><category><![CDATA[blaggregator]]></category><pubDate>Tue, 10 Jan 2017 18:48:01 GMT</pubDate></item><item><title><![CDATA[New project! thanksmaintainer.com]]></title><description><![CDATA[<p>So I've been thinking about a new project recently. It's called thanksmaintainer.com, and it helps you say, "thanks, maintainer!"</p>
<p>Basically this idea came about from <a href="https://github.com/gulpjs/gulp/issues/1806">this GitHub thread</a> where some user comes and disparages the Gulp project for being "not actively developed" and complains that it's taking a long time to release despite the fact that a) Gulp 4 <em>is</em> being actively developed and b) the Gulp maintainers owe this ungrateful, presumptive person <em>nothing</em>. As @contra <a href="https://github.com/gulpjs/gulp/issues/1806#issuecomment-247416856">says</a>:</p>
<blockquote>
<p>@rbatllet 4.0 is being worked - if you took more than five seconds to look you'd see it in other repos (for example: #1604). This repo has almost no code in it, it's a wrapper around the other modules so the contribution graph should be completely flat except for doc updates and major releases. We've responded to these tickets so many times - we have lives too.</p>
<p>I've had to move across the country 3 times since the tweet you linked - had my business unexpectedly fail (startups!), had relationships fail, deaths, travel, poverty, etc. - where the fuck am I supposed to find time to work on this while I'm trying to pay rent and put food in my stomach? The attitude people have towards open source authors is disgusting - I don't owe you anything, nobody does. Unless you've done something for the open source community (hint: you haven't!) then you aren't entitled to shit. If you want something to happen then help make it happen, otherwise log off.</p>
</blockquote>
<p>I read this comment and thought, <em>that freaking <strong>sucks</strong></em>. I feel like there's a problem in the open source and freedom-respecting software community where consumers demand stuff from project maintainers like the maintainers <em>owe</em> them something or they <em>deserve</em> some feature/bugfix/etc. This is obviously complete and utter bullshit - most maintainers work on their projects in their spare time - and it can start to feel like maintaining a project is a waste of time because all you get from it is a drove of angry entitled haters.</p>
<p>thanksmaintainer.com is designed to solve this problem. Here's how you use it; it's very simple:</p>
<ol>
<li>You visit thanksmaintainer.com</li>
<li>You sign in with GitHub</li>
<li>You find projects that you use and are grateful for</li>
<li>You click the "thanks, maintainer!" button</li>
</ol>
<p>thanksmaintainer.com will keep track of all the good vibes people are sending towards projects. When it reaches a certain threshold, the website will (probably) find a way to contact the maintainers and let them know how many people's lives they've made better. Not sure how this last bit will work yet, or if it'll even work like that at all. But the core idea is there - hopefully it'll be an easy way to give some love back to maintainers who may really need it.</p>
<p>Some design notes: it'll only work with GitHub to begin with, but eventually I hope to expand support to e.g. GitLab. Also, the fact that it's focused on projects and not maintainers is intentional - being thankful for a person instead of a project isn't as meaningful because you're not specifying why you're thankful. In contrast, the project-centric design lets you say, "these <em>particular</em> lines of code impacted my life in a meaningful way." Plus, a lot of projects have more than one maintainer, and it seems foolish to only thank <em>some</em> of the project maintainers, and not others.</p>
<p>I would love to hear feedback on this idea. So, if you have any thoughts, <a href="/contact">get in touch</a> with me and let me know.</p>
<p>Stay happy &#x3C;3</p>
]]></description><link>https://strugee.net/blog/2017/01/new-project-thanksmaintainer.com</link><guid isPermaLink="true">https://strugee.net/blog/2017/01/new-project-thanksmaintainer.com</guid><category><![CDATA[development]]></category><category><![CDATA[blaggregator]]></category><pubDate>Tue, 10 Jan 2017 00:55:54 GMT</pubDate></item></channel></rss>